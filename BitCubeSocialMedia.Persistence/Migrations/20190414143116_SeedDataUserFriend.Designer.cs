// <auto-generated />
using System;
using BitCubeSocialMedia.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BitCubeSocialMedia.Persistence.Migrations
{
    [DbContext(typeof(BitCubeSocialMediaContext))]
    [Migration("20190414143116_SeedDataUserFriend")]
    partial class SeedDataUserFriend
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BitCubeSocialMedia.Domain.AggregateModels.UserAggregate.ChildEntities.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("Friend1Id");

                    b.Property<Guid>("Friend2Id");

                    b.HasKey("Id");

                    b.HasAlternateKey("Friend1Id", "Friend2Id");

                    b.HasIndex("Friend2Id");

                    b.ToTable("Friend");
                });

            modelBuilder.Entity("BitCubeSocialMedia.Domain.AggregateModels.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9168c5e-ceb2-4faa-b6bf-329bf39fa1e1"),
                            Email = "johnmadison@mah",
                            FirstName = "John",
                            LastName = "Madison",
                            Password = "$2a$11$UIqls18UnkSGoEwueq5yS.vE96E8IMKKcOsxQvhag7K05QJI6Ny.e"
                        },
                        new
                        {
                            Id = new Guid("f9168c5e-ceb2-4faa-b6bf-329bf39fa1e2"),
                            Email = "adammadison@mah",
                            FirstName = "Adam",
                            LastName = "Madison",
                            Password = "$2a$11$yrPwwAkNCPB6AyVvWQWKp.gPZF7IOUUggRn6/jxfPEIpKlJ2WO8MK"
                        },
                        new
                        {
                            Id = new Guid("f9168c5e-ceb2-4faa-b6bf-329bf39fa1e3"),
                            Email = "jamespaterson@mah",
                            FirstName = "James",
                            LastName = "Paterson",
                            Password = "$2a$11$UKluFXuybpcPcU96989E3eFpBEQgVVLXiTCwcPN0jfZwgs5i2VL8a"
                        },
                        new
                        {
                            Id = new Guid("f9168c5e-ceb2-4faa-b6bf-329bf39fa1e4"),
                            Email = "amyjackson@mah",
                            FirstName = "Amy",
                            LastName = "Jackson",
                            Password = "$2a$11$tGoWnC8hoshn/Q6tcmlfmuzc.WkIjFDuKhyMhY.Lg.LhLHvmGU.eK"
                        });
                });

            modelBuilder.Entity("BitCubeSocialMedia.Domain.AggregateModels.UserAggregate.ChildEntities.Friend", b =>
                {
                    b.HasOne("BitCubeSocialMedia.Domain.AggregateModels.UserAggregate.User", "Friend1")
                        .WithMany("Friend1s")
                        .HasForeignKey("Friend1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BitCubeSocialMedia.Domain.AggregateModels.UserAggregate.User", "Friend2")
                        .WithMany("Friend2s")
                        .HasForeignKey("Friend2Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
